# Generated by Django 4.2.5 on 2023-10-24 17:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConnectionTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('phone_zone', models.CharField(choices=[('+1', 'Canada +1'), ('+7', 'Kazakhstan +7'), ('+20', 'Egypt +20'), ('+27', 'South Africa +27'), ('+30', 'Greece +30'), ('+31', 'Netherlands +31'), ('+32', 'Belgium +32'), ('+33', 'France +33'), ('+34', 'Spain +34'), ('+36', 'Hungary +36'), ('+39', 'Italy +39'), ('+40', 'Romania +40'), ('+41', 'Switzerland +41'), ('+43', 'Austria +43'), ('+44', 'United Kingdom +44'), ('+45', 'Denmark +45'), ('+46', 'Sweden +46'), ('+47', 'Norway +47'), ('+48', 'Poland +48'), ('+49', 'Germany +49'), ('+51', 'Peru +51'), ('+52', 'Mexico +52'), ('+53', 'Cuba +53'), ('+54', 'Argentina +54'), ('+55', 'Brazil +55'), ('+56', 'Chile +56'), ('+57', 'Colombia +57'), ('+58', 'Venezuela +58'), ('+60', 'Malaysia +60'), ('+61', 'Australia +61'), ('+62', 'Indonesia +62'), ('+63', 'Philippines +63'), ('+64', 'New Zealand +64'), ('+65', 'Singapore +65'), ('+66', 'Thailand +66'), ('+81', 'Japan +81'), ('+82', 'South Korea +82'), ('+84', 'Vietnam +84'), ('+86', 'China +86'), ('+90', 'TÃ¼rkiye +90'), ('+91', 'India +91'), ('+92', 'Pakistan +92'), ('+93', 'Afghanistan +93'), ('+94', 'Sri Lanka +94'), ('+95', 'Myanmar +95'), ('+98', 'Iran +98'), ('+211', 'South Sudan +211'), ('+212', 'Morocco +212'), ('+213', 'Algeria +213'), ('+216', 'Tunisia +216'), ('+218', 'Libya +218'), ('+220', 'Gambia +220'), ('+221', 'Senegal +221'), ('+222', 'Mauritania +222'), ('+223', 'Mali +223'), ('+224', 'Guinea +224'), ('+225', 'Ivory Coast +225'), ('+226', 'Burkina Faso +226'), ('+227', 'Niger +227'), ('+228', 'Togo +228'), ('+229', 'Benin +229'), ('+230', 'Mauritius +230'), ('+231', 'Liberia +231'), ('+232', 'Sierra Leone +232'), ('+233', 'Ghana +233'), ('+234', 'Nigeria +234'), ('+235', 'Chad +235'), ('+236', 'Central African Republic +236'), ('+237', 'Cameroon +237'), ('+238', 'Cape Verde +238'), ('+239', 'Sao Tome and Principe +239'), ('+240', 'Equatorial Guinea +240'), ('+241', 'Gabon +241'), ('+242', 'Republic of the Congo +242'), ('+243', 'Democratic Republic of the Congo +243'), ('+244', 'Angola +244'), ('+245', 'Guinea-Bissau +245'), ('+246', 'British Indian Ocean Territory +246'), ('+248', 'Seychelles +248'), ('+249', 'Sudan +249'), ('+250', 'Rwanda +250'), ('+251', 'Ethiopia +251'), ('+252', 'Somalia +252'), ('+253', 'Djibouti +253'), ('+254', 'Kenya +254'), ('+255', 'Tanzania +255'), ('+256', 'Uganda +256'), ('+257', 'Burundi +257'), ('+258', 'Mozambique +258'), ('+260', 'Zambia +260'), ('+261', 'Madagascar +261'), ('+262', 'Mayotte +262'), ('+263', 'Zimbabwe +263'), ('+264', 'Namibia +264'), ('+265', 'Malawi +265'), ('+266', 'Lesotho +266'), ('+267', 'Botswana +267'), ('+268', 'Swaziland +268'), ('+269', 'Comoros +269'), ('+290', 'Saint Helena +290'), ('+291', 'Eritrea +291'), ('+297', 'Aruba +297'), ('+298', 'Faroe Islands +298'), ('+299', 'Greenland +299'), ('+350', 'Gibraltar +350'), ('+351', 'Portugal +351'), ('+352', 'Luxembourg +352'), ('+353', 'Ireland +353'), ('+354', 'Iceland +354'), ('+355', 'Albania +355'), ('+356', 'Malta +356'), ('+357', 'Cyprus +357'), ('+358', 'Finland +358'), ('+359', 'Bulgaria +359'), ('+370', 'Lithuania +370'), ('+371', 'Latvia +371'), ('+372', 'Estonia +372'), ('+373', 'Moldova +373'), ('+374', 'Armenia +374'), ('+375', 'Belarus +375'), ('+376', 'Andorra +376'), ('+377', 'Monaco +377'), ('+378', 'San Marino +378'), ('+379', 'Vatican +379'), ('+380', 'Ukraine +380'), ('+381', 'Serbia +381'), ('+382', 'Montenegro +382'), ('+383', 'Kosovo +383'), ('+385', 'Croatia +385'), ('+386', 'Slovenia +386'), ('+387', 'Bosnia and Herzegovina +387'), ('+389', 'Macedonia +389'), ('+420', 'Czech Republic +420'), ('+421', 'Slovakia +421'), ('+423', 'Liechtenstein +423'), ('+500', 'Falkland Islands +500'), ('+501', 'Belize +501'), ('+502', 'Guatemala +502'), ('+503', 'El Salvador +503'), ('+504', 'Honduras +504'), ('+505', 'Nicaragua +505'), ('+506', 'Costa Rica +506'), ('+507', 'Panama +507'), ('+508', 'Saint Pierre and Miquelon +508'), ('+509', 'Haiti +509'), ('+590', 'Saint Barthelemy +590'), ('+591', 'Bolivia +591'), ('+592', 'Guyana +592'), ('+593', 'Ecuador +593'), ('+595', 'Paraguay +595'), ('+597', 'Suriname +597'), ('+598', 'Uruguay +598'), ('+599', 'Curacao +599'), ('+670', 'East Timor +670'), ('+672', 'Antarctica +672'), ('+673', 'Brunei +673'), ('+674', 'Nauru +674'), ('+675', 'Papua New Guinea +675'), ('+676', 'Tonga +676'), ('+677', 'Solomon Islands +677'), ('+678', 'Vanuatu +678'), ('+679', 'Fiji +679'), ('+680', 'Palau +680'), ('+681', 'Wallis and Futuna +681'), ('+682', 'Cook Islands +682'), ('+683', 'Niue +683'), ('+685', 'Samoa +685'), ('+686', 'Kiribati +686'), ('+687', 'New Caledonia +687'), ('+688', 'Tuvalu +688'), ('+689', 'French Polynesia +689'), ('+690', 'Tokelau +690'), ('+691', 'Micronesia +691'), ('+692', 'Marshall Islands +692'), ('+850', 'North Korea +850'), ('+852', 'Hong Kong +852'), ('+853', 'Macao +853'), ('+855', 'Cambodia +855'), ('+856', 'Laos +856'), ('+880', 'Bangladesh +880'), ('+886', 'Taiwan +886'), ('+960', 'Maldives +960'), ('+961', 'Lebanon +961'), ('+962', 'Jordan +962'), ('+963', 'Syria +963'), ('+964', 'Iraq +964'), ('+965', 'Kuwait +965'), ('+966', 'Saudi Arabia +966'), ('+967', 'Yemen +967'), ('+968', 'Oman +968'), ('+970', 'Palestine +970'), ('+971', 'United Arab Emirates +971'), ('+972', 'Israel +972'), ('+973', 'Bahrain +973'), ('+974', 'Qatar +974'), ('+975', 'Bhutan +975'), ('+976', 'Mongolia +976'), ('+977', 'Nepal +977'), ('+992', 'Tajikistan +992'), ('+993', 'Turkmenistan +993'), ('+994', 'Azerbaijan +994'), ('+995', 'Georgia +995'), ('+996', 'Kyrgyzstan +996'), ('+998', 'Uzbekistan +998')], default='+90')),
                ('phone_number', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Up to 13 digits allowed for phone number. (Except phone zone)', regex='^[0-9]{7,13}$')])),
                ('credit_amount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DtcInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=7)),
                ('desc', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Ecu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10)),
                ('carmanufacturers', models.CharField(blank=True, max_length=130, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EcuBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EcuModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FileProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilePurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bought_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_type', models.CharField(choices=[('E', 'ECU file'), ('T', 'Transmission File')], max_length=1)),
                ('transmission', models.CharField(choices=[('A', 'AUTO'), ('M', 'MANUAL')], max_length=1)),
                ('tool_type', models.CharField(choices=[('S', 'Slave'), ('M', 'Master')], max_length=1)),
                ('customer_description', models.TextField(max_length=400)),
                ('original_file', models.FileField(upload_to='processing/original/')),
                ('employee_description', models.TextField(blank=True, max_length=400, null=True)),
                ('processed_file', models.FileField(blank=True, null=True, upload_to='processing/processed/')),
                ('status', models.CharField(choices=[('D', 'Done'), ('C', 'Cancelled'), ('O', 'Ongoing')], default='O', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='FileSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=80, unique=True)),
                ('file', models.FileField(unique=True, upload_to='sale/')),
                ('desc', models.TextField(max_length=600)),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FileService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manual_status', models.BooleanField()),
                ('is_scheduled', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='FileServiceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday'), ('Sat', 'Saturday'), ('Sun', 'Sunday')], max_length=3)),
                ('starting_hour', models.PositiveIntegerField()),
                ('ending_hour', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('link_title', models.CharField(blank=True, max_length=60, null=True)),
                ('desc', models.TextField(blank=True, max_length=600, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeBullet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_percentage', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('E', 'Expense'), ('D', 'Deposit')], default='D', max_length=1)),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='VehiclePotential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_hp', models.PositiveIntegerField()),
                ('new_hp', models.PositiveIntegerField()),
                ('old_nm', models.PositiveIntegerField()),
                ('new_nm', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='VehicleVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('fuel_type', models.CharField(choices=[('P', 'Petrol'), ('D', 'Diesel'), ('EL', 'Electric'), ('L', 'LPG'), ('E', 'Ethanol'), ('C', 'CNG'), ('PL', 'Petrol/LPG'), ('PE', 'Petrol/Ethanol'), ('PC', 'Petrol/CNG'), ('H', 'Hybrid')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.vehiclemodel')),
            ],
        ),
        migrations.AddConstraint(
            model_name='vehicleversion',
            constraint=models.UniqueConstraint(fields=('name', 'fuel_type'), name='vehicleversion_name_fueltype_unique_constraint'),
        ),
        migrations.AddField(
            model_name='vehiclepotential',
            name='known_reading_methods',
            field=models.ManyToManyField(to='database.connectiontool'),
        ),
        migrations.AddField(
            model_name='vehiclemodel',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.vehiclebrand'),
        ),
        migrations.AddField(
            model_name='vehiclemodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.vehiclecategory'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='ecu_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.ecumodel'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='potential',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle', to='database.vehiclepotential'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.vehicleyear'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.vehicleversion'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.customer'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='file_bought',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.filesale'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='file_request',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.filerequest'),
        ),
        migrations.AddField(
            model_name='processpricing',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.fileprocess'),
        ),
        migrations.AddField(
            model_name='processpricing',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.vehicle'),
        ),
        migrations.AddField(
            model_name='knowledgepart',
            name='knowledge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.knowledge'),
        ),
        migrations.AddField(
            model_name='knowledgebullet',
            name='part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.knowledgepart'),
        ),
        migrations.AddField(
            model_name='fileserviceschedule',
            name='file_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.fileservice'),
        ),
        migrations.AddField(
            model_name='fileservice',
            name='employee',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.employee'),
        ),
        migrations.AddField(
            model_name='filerequest',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.customer'),
        ),
        migrations.AddField(
            model_name='filerequest',
            name='employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='database.employee'),
        ),
        migrations.AddField(
            model_name='filerequest',
            name='processes',
            field=models.ManyToManyField(to='database.fileprocess'),
        ),
        migrations.AddField(
            model_name='filerequest',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.connectiontool'),
        ),
        migrations.AddField(
            model_name='filerequest',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.vehicle'),
        ),
        migrations.AddField(
            model_name='filepurchase',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.customer'),
        ),
        migrations.AddField(
            model_name='filepurchase',
            name='file_sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.filesale'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ecumodel',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.ecubrand'),
        ),
        migrations.AddField(
            model_name='ecu',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.ecumodel'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='vehicleyear',
            constraint=models.UniqueConstraint(fields=('model', 'year'), name='vehicleyear_model_year_constraint'),
        ),
        migrations.AddConstraint(
            model_name='vehiclemodel',
            constraint=models.UniqueConstraint(fields=('brand', 'name', 'category'), name='vehiclemodel_brand_name_category_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='vehicle',
            constraint=models.UniqueConstraint(fields=('vehicle_year', 'version', 'ecu_model'), name='vehicle_vehicleyear_version_ecumodel_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='processpricing',
            constraint=models.UniqueConstraint(fields=('vehicle', 'process'), name='processpricing_process_vehicle_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='knowledgepart',
            constraint=models.UniqueConstraint(fields=('title', 'knowledge'), name='knowledgepart_title_knowledge_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='knowledgebullet',
            constraint=models.UniqueConstraint(fields=('content', 'part'), name='knowledgebullet_content_part_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='fileserviceschedule',
            constraint=models.CheckConstraint(check=models.Q(('starting_hour__range', (0, 24))), name='database_fileserviceschedule_starting_hour_range'),
        ),
        migrations.AddConstraint(
            model_name='fileserviceschedule',
            constraint=models.CheckConstraint(check=models.Q(('ending_hour__range', (0, 24))), name='database_fileserviceschedule_ending_hour_range'),
        ),
        migrations.AddConstraint(
            model_name='fileserviceschedule',
            constraint=models.CheckConstraint(check=models.Q(('ending_hour__gt', models.F('starting_hour'))), name='database_fileserviceschedule_endinghour_greater_than_startinghour'),
        ),
        migrations.AddConstraint(
            model_name='fileserviceschedule',
            constraint=models.UniqueConstraint(fields=('file_service', 'day'), name='file_service_schedule_day_fileservice_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='filepurchase',
            constraint=models.UniqueConstraint(fields=('customer', 'file_sale'), name='filepurchase_customer_filesale_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='ecumodel',
            constraint=models.UniqueConstraint(fields=('name', 'brand'), name='ecumodel_name_brand_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='ecu',
            constraint=models.UniqueConstraint(fields=('model', 'number'), name='ecu_model_number_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(fields=('phone_zone', 'phone_number'), name='customer_phonezone_phonenumber_unique_constraint'),
        ),
    ]
